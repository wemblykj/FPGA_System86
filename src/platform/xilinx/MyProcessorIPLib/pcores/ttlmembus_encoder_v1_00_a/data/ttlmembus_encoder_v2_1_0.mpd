###################################################################
##
## Name     : ttlmembus_encoder
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ttlmembus_encoder

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = TTL Memory Bus Encoder
OPTION LONG_DESC = TTL Memory Bus line to bus encoder
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)
OPTION IP_GROUP = WemblyKJ:TTL:Memory
OPTION USAGE_LEVEL = BASE_USER

IO_INTERFACE IO_IF = ttl_mem, IO_TYPE = TTLMEM_V1

## Bus Interfaces
# TTL Memory

BUS_INTERFACE BUS = M_RAM, BUS_STD = ttl_ram, BUS_TYPE = INITIATOR, ISVALID = (C_MEM_TYPE == 0)
BUS_INTERFACE BUS = M_ROM, BUS_STD = ttl_rom, BUS_TYPE = INITIATOR, ISVALID = (C_MEM_TYPE == 1)


## Generics for VHDL or Parameters for Verilog

# Family Generics
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_INSTANCE = ttlmembus_encoder_inst, DT = STRING


# TTL Memory
PARAMETER C_PRESET = 0, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_preset
PARAMETER C_MEM_TYPE = 0, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, RANGE=(0,1), VALUES=(0=RAM, 1=ROM)
PARAMETER C_RAM_TYPE = 0, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, RANGE=(0), VALUES=(0=SRAM), ISVALID = (C_MEM_TYPE == 0)
PARAMETER C_ROM_TYPE = 0, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, RANGE=(0,1), VALUES=(0=PROM, 1=EPROM), ISVALID = (C_MEM_TYPE == 1)
PARAMETER C_CTRL_WIDTH = 0, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = UPDATE, RANGE=(1:3), VALUES=(1=CE, 2=CE|OE, 3=CE|OE|WE), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_control_bus_size
PARAMETER C_ADDR_WIDTH = 16, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, RANGE=(4:16)
PARAMETER C_DATA_WIDTH = 8, DT = INTEGER, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, RANGE=(4,8)

## Ports

# TTL Memory bus
PORT nChipEnable = nChipEnable, DIR = O, BUS = M_RAM:M_ROM, PERMIT = BASE_USER, INITIALVAL=VCC
PORT nOutputEnable = nOutputEnable, DIR = O, BUS = M_RAM:M_ROM, PERMIT = BASE_USER, INITIALVAL=VCC, ISVALID = (C_MEM_TYPE == 0 || (C_MEM_TYPE == 1 && C_ROM_TYPE == 1))
PORT nWriteEnable = nWriteEnable, DIR = O, BUS = M_RAM, PERMIT = BASE_USER, INITIALVAL=VCC, ISVALID = (C_MEM_TYPE == 0)
PORT Address = Address, DIR = O, VEC = [(C_ADDR_WIDTH-1):0], BUS = M_RAM:M_ROM, PERMIT = BASE_USER
PORT Data = Data, DIR = IO, THREE_STATE = FALSE, VEC = [(C_DATA_WIDTH-1):0], BUS = M_RAM:M_ROM, PERMIT = BASE_USER

#TTL Memory interface
PORT nCE = "", DIR = I, IO_IF = ttl_mem, PERMIT = BASE_USER, INITIALVAL=VCC
PORT nOE = "", DIR = I, IO_IF = ttl_mem, PERMIT = BASE_USER, INITIALVAL=VCC, ISVALID = (C_MEM_TYPE == 0 || (C_MEM_TYPE == 1 && C_ROM_TYPE == 1))
PORT nWE = "", DIR = I, IO_IF = ttl_mem, PERMIT = BASE_USER, INITIALVAL=VCC, ISVALID = (C_MEM_TYPE == 0)
PORT A = "", DIR = I, VEC = [(C_ADDR_WIDTH-1):0], IO_IF = ttl_mem, PERMIT = BASE_USER
PORT D_I = "", DIR = I, VEC = [(C_DATA_WIDTH-1):0], IO_IF = ttl_mem, PERMIT = BASE_USER
PORT D_O = "", DIR = O, VEC = [(C_DATA_WIDTH-1):0], IO_IF = ttl_mem, PERMIT = BASE_USER
PORT D = "", TRI_O = D_O, TRI_T = nWE, DIR = IO, ENDIAN = LITTLE, TRI_I = D_I, THREE_STATE = TRUE, VEC = [(C_DATA_WIDTH-1):0], IO_IF = ttl_mem, ENABLE = SINGLE, PERMIT = BASE_USER

END
