/*
 * Component.h
 *
 *  Created on: 17 Jun 2019
 *      Author: administrator
 */

#ifndef COMPONENT_H_
#define COMPONENT_H_

#include "xbasic_types.h"
#include "xil_io.h"

template<int BaseAddress, int Control, int Status>
class Component {
public:
	Component() {}
	virtual ~Component() {}

	Xuint32 GetBaseAddress() const { return BaseAddress; }

	Xuint32 GetControl() const;
	void SetControl(Xuint32 control);

	Xuint32 GetStatus() const;
	void SetStatus(Xuint32 status);

	virtual bool GetEnabled() const = 0;
	virtual void SetEnabled(bool enable) = 0;

	virtual bool GetReset() const = 0;
	virtual void SetReset(bool reset) = 0;

	virtual void ReportSettings();
};

template<int BaseAddress, int Control, int Status>
Xuint32 Component<BaseAddress, Control, Status>::GetControl() const
{
	return Xil_In32(BaseAddress, Control);
}

template<int BaseAddress, int Control, int Status>
void Component<BaseAddress, Control, Status>::SetControl(Xuint32 control)
{
	Xil_Out32(BaseAddress, Control, control);
}

template<int BaseAddress, int Control, int Status>
Xuint32 Component<BaseAddress, Control, Status>::GetStatus() const
{
	return Xil_In32(BaseAddress, Status);
}

template<int BaseAddress, int Control, int Status>
void Component<BaseAddress, Control, Status>::SetStatus(Xuint32 status)
{
	Xil_Out32(BaseAddress, Status, status);
}

#endif /* COMPONENT_H_ */
