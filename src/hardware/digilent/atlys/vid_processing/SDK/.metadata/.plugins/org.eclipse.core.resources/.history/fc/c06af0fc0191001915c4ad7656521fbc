/*
 * Component.h
 *
 *  Created on: 17 Jun 2019
 *      Author: administrator
 */

#ifndef COMPONENT_H_
#define COMPONENT_H_

#include "xbasic_types.h"

template<int BaseAddress, int Control, int Status>
class Component {
public:
	Component(Xuint32 baseAddress);
	virtual ~Component();

	Xuint32 GetBaseAddress() const { return BaseAddress; }

	Xuint32 GetControl() const;
	void SetControl(Xuint32 control);

	virtual bool GetEnabled() const = 0;
	void SetEnabled(bool enable) = 0;

	virtual bool GetReset() const = 0;
	virtual void SetReset(bool reset) = 0;

	virtual void ReportSettings();
};

Xuint32 Component::GetControl()
{
	return TPG_ReadReg(BaseAddress, Control);
}

void Component::SetControl(Xuint32 control)
{
	TPG_WriteReg(BaseAddress, Control, control);
}

Xuint32 TestPatternGenerator::GetStatus()
{
	return TPG_ReadReg(BaseAddress, Status);
}

void TestPatternGenerator::SetStatus(Xuint32 status)
{
	TPG_WriteReg(BaseAddress, Status, status);
}

#endif /* COMPONENT_H_ */
