/*
 * TestPatternGenerator.cpp
 *
 *  Created on: 17 Jun 2019
 *      Author: administrator
 */

#include "TestPatternGenerator.h"

#include "tpg.h"

TestPatternGenerator::TestPatternGenerator(Xuint32 baseAddress)
: Component(baseAddress)
{
	// TODO Auto-generated constructor stub

}

TestPatternGenerator::~TestPatternGenerator() {
	// TODO Auto-generated destructor stub
}

bool TestPatternGenerator::GetEnabled()
{
	Xuint32 control = GetControl();
	return (control & TPG_CTL_EN_MASK) == TPG_CTL_EN_MASK;
}

void TestPatternGenerator::SetEnabled(bool enable)
{
	Xuint32 control = GetControl();
	if (enable)
	{
		control &= ~TPG_CTL_EN_MASK;
	}
	else
	{
		control |= TPG_CTL_EN_MASK;
	}

	SetControl(control);
}

bool TestPatternGenerator::GetReset()
{
	Xuint32 control = GetControl();
	return (control & TPG_RST_RESET) == TPG_RST_RESET;
}

void TestPatternGenerator::SetReset(bool reset)
{
	Xuint32 control = GetControl();
	if (reset)
	{
		control &= ~TPG_RST_RESET;
	}
	else
	{
		control |= TPG_RST_RESET;
	}

	SetControl(control);
}

void TestPatternGenerator::FSyncReset()
{
	Xuint32 control = GetControl();
	control |= TPG_RST_AUTORESET;

	SetControl(control);
}

void TestPatternGenerator::ReportSettings() {

  Xuint32 status, reg_val;

  xil_printf("Test Pattern Generator Core Configuration:\r\n");
  xil_printf(" Enable Bit: %s\r\n", GetEnabled() ? "high" : "low");
  xil_printf(" Register Update Bit: %1d\r\n", (TPG_ReadReg(BaseAddress, TPG_CONTROL) & TPG_CTL_RUE_MASK) >> 1);
  xil_printf(" Reset Bit: %1d\r\n", GetReset() ? "high" : "low");
  status = GetStatus();
  xil_printf(" TPG Status: %08x \r\n", status);
  xil_printf(" Core Version:   %1d.%1d\r\n", TPG_ReadReg(BaseAddress, TPG_VERSION));
  reg_val = GetControl();
  xil_printf("TPG_CONTROL           : %8x\r\n", reg_val);
  reg_val = TPG_ReadReg(BaseAddress, TPG_IRQ_EN );
  xil_printf("TPG_IRQ_EN : %8x\r\n", reg_val);
  reg_val = (TPG_ReadReg(BaseAddress, TPG_ACTIVE_SIZE ) && 0x1FFF);
  xil_printf("Active Rows      : %8d\r\n", reg_val);
  reg_val = (TPG_ReadReg(BaseAddress, TPG_ACTIVE_SIZE) >> 16);
  xil_printf("Active Columns      : %8d\r\n", reg_val);
}
