###################################################################
##
## Name     : axi_ram
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN axi_ram

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = AXI-Lite TTL RAM Emulation
OPTION LONG_DESC = AXI4-Lite TTL RAM Emulation over AXI4 bus
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)
OPTION IP_GROUP = Wembly:TTL:Memory
OPTION USAGE_LEVEL = BASE_USER

## Bus Interfaces
# TTL RAM
BUS_INTERFACE BUS = S_RAM, BUS_STD = ttl_ram, BUS_TYPE = TARGET
# AXI
BUS_INTERFACE BUS = M_AXI, BUS_STD = AXI, BUS_TYPE = MASTER


## Generics for VHDL or Parameters for Verilog
# TTL RAM
PARAMETER C_RAM_ADDR_WIDTH = 16, DT = INTEGER, PERMIT = BASE_USER, BUS = S_RAM
PARAMETER C_RAM_DATA_WIDTH = 8, DT = INTEGER, PERMIT = BASE_USER, BUS = S_RAM
# Slave
PARAMETER C_SLAVE_BASE_ADDR = 0xC0000000, DT = std_logic_vector, PERMIT = BASE_USER, MIN_SIZE = 0x100
PARAMETER C_USE_DYNAMIC_ADDR_OFFSET = 0, DT = std_logic, PERMIT = BASE_USER, RANGE=(0:1)
# AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_M_AXI_LITE_ADDR_WIDTH = 32, DT = INTEGER, BUS = M_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_M_AXI_LITE_DATA_WIDTH = 32, DT = INTEGER, BUS = M_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_M_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = M_AXI

## Ports
# TTL RAM
PORT chip_enable = ChipEnable, DIR = I, BUS = S_RAM
PORT write_enable = WriteEnable, DIR = I, BUS = S_RAM
PORT output_enable = OutputEnable, DIR = I, BUS = S_RAM
PORT addr = Addr, DIR = I, BUS = S_RAM
PORT data = Data, DIR = IO, BUS = S_RAM

# Slave
PORT slave_addr_offset = SLAVE_ADDR_OFFSET, DIR = I, VEC = [(C_M_AXI_LITE_ADDR_WIDTH-1):0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID=(C_USE_DYNAMIC_ADDR_OFFSET == 1)
# AXI
PORT m_axi_lite_aclk = "", DIR = I, SIGIS = CLK, BUS = M_AXI
PORT m_axi_lite_aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = M_AXI
PORT md_error = "", DIR = O
PORT m_axi_lite_arready = ARREADY, DIR = I, BUS = M_AXI
PORT m_axi_lite_arvalid = ARVALID, DIR = O, BUS = M_AXI
PORT m_axi_lite_araddr = ARADDR, DIR = O, VEC = [(C_M_AXI_LITE_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT m_axi_lite_arprot = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI
PORT m_axi_lite_rready = RREADY, DIR = O, BUS = M_AXI
PORT m_axi_lite_rvalid = RVALID, DIR = I, BUS = M_AXI
PORT m_axi_lite_rdata = RDATA, DIR = I, VEC = [(C_M_AXI_LITE_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT m_axi_lite_rresp = RRESP, DIR = I, VEC = [1:0], BUS = M_AXI
PORT m_axi_lite_awready = AWREADY, DIR = I, BUS = M_AXI
PORT m_axi_lite_awvalid = AWVALID, DIR = O, BUS = M_AXI
PORT m_axi_lite_awaddr = AWADDR, DIR = O, VEC = [(C_M_AXI_LITE_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT m_axi_lite_awprot = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI
PORT m_axi_lite_wready = WREADY, DIR = I, BUS = M_AXI
PORT m_axi_lite_wvalid = WVALID, DIR = O, BUS = M_AXI
PORT m_axi_lite_wdata = WDATA, DIR = O, VEC = [(C_M_AXI_LITE_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT m_axi_lite_wstrb = WSTRB, DIR = O, VEC = [((C_M_AXI_LITE_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT m_axi_lite_bready = BREADY, DIR = O, BUS = M_AXI
PORT m_axi_lite_bvalid = BVALID, DIR = I, BUS = M_AXI
PORT m_axi_lite_bresp = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI

END
